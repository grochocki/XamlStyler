# Environment variables defined in a calling workflow are not accessible to this reusable workflow. Refer to the documentation for further details on this limitation.
name: build_pipelines_templates_build_extension_public
on:
  workflow_call:
jobs:
  BuildExtension:
    name: Build VSIX
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - uses: actions/checkout@v4.1.0
    - name: Update Version Number
      run: ' ${{ env.major }}.$(Get-Date -Format "yyMM").${{ env.patch }}'
      shell: pwsh
    - name: Install NuGet Tools
      uses: nuget/setup-nuget@v1.2.0
    - name: NuGet Restore
      run: nuget restore src/XamlStyler.sln -Verbosity Detailed -NonInteractive
    - name: install msbuild
      uses: microsoft/setup-msbuild@v1.3.1
    - name: run msbuild
      run: msbuild src/XamlStyler.sln -t:Clean -p:Configuration=${{ env.buildConfiguration }} -p:Platform="Any CPU" -maxCpuCount
    # The following script preserves the globbing behavior of the CopyFiles task.
    # Refer to this transformer's documentation for an alternative that will work in simple cases.
    - name: Copy VSIX to Staging
      uses: actions/github-script@v7.0.0
      env:
        TARGET_FOLDER: "${{ runner.temp }}"
        CLEAN_TARGET_FOLDER: true
        FLATTEN_FOLDERS: true
        OVERWRITE: true
        CONTENTS: |
          build/extension-overview.md
          build/extension-manifest-vs2019.json
          build/extension-manifest-vs2022.json
          **/*.vsix
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |-
          const fs = require('fs').promises
          const path = require('path')
          const target = path.resolve(process.env.TARGET_FOLDER)
          process.chdir(process.env.SOURCE_FOLDER || '.')
          if (process.env.CLEAN_TARGET_FOLDER === 'true') await io.rmRF(target)
          const flattenFolders = process.env.FLATTEN_FOLDERS === 'true'
          const options = {force: process.env.OVERWRITE === 'true'}
          const globber = await glob.create(process.env.CONTENTS || '**')
          for await (const file of globber.globGenerator()) {
            if ((await fs.lstat(file)).isDirectory()) continue
            const filename = flattenFolders ? path.basename(file) : file.substring(process.cwd().length)
            const dest = path.join(target, filename)
            await io.mkdirP(path.dirname(dest))
            await io.cp(file, dest, options)
          }
    - name: Publish VSIX Artifact
      uses: actions/upload-artifact@v4.1.0
      with:
        name: XamlStyler.Extension.Windows
        path: "${{ runner.temp }}"
